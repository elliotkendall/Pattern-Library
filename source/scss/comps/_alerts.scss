/**
 * Load component configurations.
 */
@import 'alerts/skin';

/**
 * Defines the alert component.
 */
@mixin alert( $selector, $custom-skin: () ) {
  
  /**
   * Extends the default appearance with the user-defined appearance.
   */
  $skin: map-extend($alert-default-skin, $custom-skin, true);
  
  /**
   * Defines the structure of the alert component.
   */
  #{$selector} {
    padding: 8px 35px 8px 14px;
    margin-bottom: 20px;
    
    #{$all-headings} { 
      margin-top: 0;
      margin-bottom: 1rem;
    }
    
    #{$all-headings}, a { color: inherit; }
    
    /**
     * Defines the appearance of the alert component.
     */
    $color: map-deep-get($skin, 'color');
    
    $border-variant: map-deep-get($skin, 'border' 'tint-or-shade');
    $border-amount: map-deep-get($skin, 'border' 'amount');
    $bg-variant: map-deep-get($skin, 'background' 'tint-or-shade');
    $bg-amount: map-deep-get($skin, 'background' 'amount');
    $fg-variant: map-deep-get($skin, 'foreground' 'tint-or-shade');
    $fg-amount: map-deep-get($skin, 'foreground' 'amount');
    
    $border-color: if( $border-variant == 'shade', shade($color, $border-amount), tint($color, $border-amount) );
    $bg-color: if( $bg-variant == 'shade', shade($color, $bg-amount), tint($color, $bg-amount) );
    $fg-color: if( $fg-variant == 'shade', shade($color, $fg-amount), tint($color, $fg-amount) );
    
    text-shadow: map-deep-get($skin, 'shadow');
    border-radius: map-deep-get($skin, 'radius');
    border-width: map-deep-get($skin, 'border' 'width');
    border-style: map-deep-get($skin, 'border' 'style');
    border-color: $border-color;
    background-color: $bg-color;
    color: $fg-color;
    
    #{$all-headings} { text-align: map-deep-get($skin, 'heading' 'align'); }
    
    @include private('STATES') {
      
      @each $state, $color in map-deep-get($skin, 'state') {
        
        $border-color: if( $border-variant == 'shade', shade($color, $border-amount), tint($color, $border-amount) );
        $bg-color: if( $bg-variant == 'shade', shade($color, $bg-amount), tint($color, $bg-amount) );
        $fg-color: if( $fg-variant == 'shade', shade($color, $fg-amount), tint($color, $fg-amount) );
        
        &.#{$state} { 
          border-color: $border-color;
          background-color: $bg-color;
          color: $fg-color;
        }
      }
      
    };
    
  }
  
};

