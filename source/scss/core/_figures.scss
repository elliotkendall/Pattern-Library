/**
 * Defines the base figure styles.
 */
figure {
  
  $border: 1px solid color('grey');
  $radius: 3px;
  
  width: 100%;
  color: color('black', 'off');
  font-family: font('caption' 'sans');
  font-size: .7em;
  margin: 0 auto 1em;
  padding: 1em;
  text-align: center;
  border-top: $border;
  border-bottom: $border;
  
  img { 
    display: block;
    width: 100%;
    height: auto;
    margin: 0 auto;
  }
  
  figcaption { margin-top: 1em; }
  
  &::after {
    content: '';
    clear: both;
    display: block;
  }
  
  &.left { 
    float: left !important; 
    margin: 0 1em 1em 0;
    padding: 0 1em 1em 0;
    border-right: $border;
    border-bottom-right-radius: $radius;
  }
  
  &.right { 
    float: right !important; 
    margin: 0 0 1em 1em;
    padding: 0 0 1em 1em;
    border-left: $border;
    border-bottom-right-left: $radius;
  }
  
  &.left,
  &.right {
    border-top: none;
  }
  
  &.left, 
  &.right, 
  &.center { 
    text-align: left; 
  }
  
  /**
   * Defines the default size of figures across
   * various screen sizes.
   */
  @include multi-breakpoint( screen('small'), screen('medium'), screen('large') ) {
    width: 100%;
    max-width: 100%;
  };
  
  /**
   * Defines the responsive size of each type of
   * figure across various screen sizes.
   */
  $sizes: (
    'fluid': (
      'small': (
        'width': 100%,
        'max-width': 100%
      ),
      'medium': (
        'width': 100%,
        'max-width': 100%
      ),
      'large': (
        'width': 100%,
        'max-width': 100%
      )
    ),
    'center': (
      'medium': (
        'width': 100%,
        'max-width': 100%
      ),
      'large': (
        'width': 50%,
        'max-width': 700px
      )
    ),
    'left': (
      'medium': (
        'width': 50%,
        'max-width': 300px
      ),
      'large': (
        'width': 33%,
        'max-width': 300px
      )
    ),
    'right': (
      'medium': (
        'width': 50%,
        'max-width': 300px
      ),
      'large': (
        'width': 33%,
        'max-width': 300px
      )
    )
  );
  
  @each $class, $map in $sizes {
    @each $screen, $size in $map {
      @include breakpoint( screen($screen) ) {
        &.#{$class} { @include expand-properties($size); }
      }
    }
  }
  
}