/**
 * Use this stylesheet to declare only Pattern Lab styles.
 * This stylesheet should not contain any pattern-specific
 * styles. All pattern-specific styles should be placed 
 * elsewhere within you main project stylesheet.
 */

/** 
 * IMPORTS
 * 
 * Import shared vendors, configurations, and/or variables here.
 */
@import 'vends/_master';
@import 'utils/_master';
@import 'config/_master';

/**
 * CONFIGURATION
 * 
 * Set Pattern Lab configurations and/or variables here. 
 * These configurations and/or variables should only be
 * use for applying styles to the Pattern Lab design system.
 */
@include google-font('Roboto');

$sg-pattern-state-font: 'Roboto', sans-serif;
$sg-variation-label-font: 'Roboto', sans-serif;
$sg-pattern-border-color: color('grey');
$sg-pattern-border: 1px solid $sg-pattern-border-color;

/**
 * DEFFAULT STYLES
 *
 * Override default Pattern Lab styles here.
 */
.sg-states,
.sg-pattern {
  
  .sg-pattern-state {
    &::before { display: none !important; }
    display: inline-block;
    padding: 2px 4px;
    border-radius: 3px;
    font-size: 12px;
    text-shadow: 0px 0px 3px rgba(color('black'), 0.4);
    text-transform: uppercase !important;
    font-family: $sg-pattern-state-font;
    color: color('white') !important;
    margin: 5px;
    line-height: 1.1;
    
    &.specification { background-color: #708090; }
    &.construction { background-color: #F2C900; }
    &.review { background-color: #FFAB4A; }
    &.complete { background-color: #61BD4F; }
    &.reconsideration { background-color: #0079BF; }
    &.deprecated { background-color: #EB5A46; }
    
  }
  
}

.sg-pattern-category { font-family: sans-serif; }

#sg-patterns {
  padding: 10px;
  
  pre, code { color: #4297B2; }

  p code { display: inline-block; font-size: 0.95em; }
  
  .sg-pattern-category-title {
    color: grey !important;

    &:hover { color: black !important; }

    a { text-transform: inherit; text-decoration: none; color: inherit; }

  }
  
  .sg-pattern-title {
    text-transform: uppercase !important;
    color: grey !important;
    
    a { text-transform: inherit; text-decoration: none; color: inherit; }
  }
  
  .sg-pattern-extra {
    
    .sg-modal-content-inner { display: block; }
    
    &.active { max-height: 50em; }
    
    &-inner { 
      display: flex;
      flex-direction: column;
      align-content: stretch;
    }
    
    &-info, &-code { 
      width: calc(100% - 2em);
      padding: 0; 
      margin: 1em;
      flex-basis: 25em;
    }
    
    &-info { 
      overflow: scroll; 
      font-size: .95em !important; 
      border-bottom: 1px solid #CCCCCC;
      
      .sg-pattern-desc { border-bottom: none; }
      
      p { font-size: inherit !important; }
      
    }
    
  }
  
}

/**
 * EXTENDED STYLES
 *
 * Extend any Pattern Lab styles here.
 */
.sg-alerts {
  width: 100%;
  
  .sg-alert { margin: 25px; }
  
}

.sg-section {
  width: 100%;
  padding: 25px;
  
  @include breakpoint( screen('medium') ){ padding: 50px; }
  @include breakpoint( screen('large') ){ padding: 100px; }
  
}

.sg-states {
  
  .sg-pattern-state-spec {
    @include margin-y(15px);
    clear: both;
    
    .sg-pattern-state-spec-name { 
      margin-bottom: 10px; 
      
      @include breakpoint( screen('large') ){
        float: left;
        margin-right: 10px;
      }
      
    }
    
    .sg-pattern-state-spec-desc { 
      font-size: 0.9em;
      padding-left: 10px;
      
      @include breakpoint( screen('large') ){
        padding-left: 0;
      }
      
    }
    
  }
  
}

.sg-copy-here {
  display: block;
  @include padding-y(10px);
  transition: all 0.25s ease-in-out;
  @include margin-y(2.5px);
  
  &:hover {
    border: $sg-pattern-border;
    border-radius: 3px;
    padding-left: calc(2.5em + 10px);
    overflow: hidden;
    cursor: copy;
    background-color: color('white');
    white-space: nowrap;
    overflow: hidden;
  }
  
  &::before { 
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 0;
    opacity: 0; 
    text-align: center;
    line-height: 2.5;
    border-right: $sg-pattern-border;
    transition: all 0.25s ease-in-out; 
    overflow: hidden;
  }
  &::after {
    content: 'Click to Copy';
    display: block;
    position: absolute;
    font-family: sans-serif;
    right: 0;
    top: 0;
    bottom: 0;
    width: 0;
    line-height: 2.5;
    text-align: right;
    @include padding-x( 0 );
    opacity: 0;
    transition: all 0.25s ease-in-out;
    overflow: hidden;
    color: color-contrast( color('grey', 'light') );
    @include linear-gradient(to right, transparent 0%, 
                                       color('white') 20px, 
                                       $sg-pattern-border-color 21px,
                                       color('grey', 'light') 22px,
                                       color('grey', 'light') 100%);
  }
  
  &:hover::before {
    width: 2.5em;
    opacity: 1;
  }
  
  &:hover::after {
    opacity: 1;
    padding-right: 10px;
    padding-left: 30px;
    width: 80px;
  }
  
}
.sg-copy-here {
  
  &::before {
    color: color('white');
  }
  
  &.default::before { background-color: color('black', 'off'); }
  &.success::before { background-color: #61BD4F; }
  &.error::before { background-color: #EB5A46; }
  
}
.sg-copy-button {
  border: none;
  border-radius: 3px;
  padding: 5px 10px;
  line-height: inherit;
  cursor: copy;
  @include margin-y(2.5px);
  transition: all 0.25s ease-in-out;
  
  &:hover {
    @include border-right-radius(0);
  }
  
  &:after {
    content: "Click to Copy";
    display: block;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 100%;
    width: 0;
    overflow: hidden;
    transition: all 0.25s ease-in-out;
    line-height: 2.5;
    font-family: sans-serif;
    background-color: color('grey', 'light');
    color: color-contrast( color('grey', 'light') );
    @include border-right-radius(3px);
  }
  
  &:hover::after {
    opacity: 1;
    width: 125px;
  }
  
}
.sg-copy-button {
  color: color('white');
  
  &.default { background-color: color('black', 'off'); }
  &.success { background-color: #61BD4F; }
  &.error { background-color: #EB5A46; }
  
}

.sg-code-snippet {
  @extend pre, code;
  float: right;
  font-size: 11px;
  padding: 2px 4px;
  background-color: color('white');
  border: $sg-pattern-border;
  border-radius: 3px;
  margin: 2.5px;
}

.sg-variation-label {
  font-family: $sg-variation-label-font;
  font-size: 22px;
  color: color('gold');
  margin-top: 1em; 
  margin-bottom: .5em;
  text-transform: capitalize;
  line-height: 1.25;
  
  &.lowercase { text-transform: lowercase; }
  &.uppercase { text-transform: uppercase; }
  &.code { font-family: font('code'); }
  
}

/**
 * PATTERN STYLES
 *
 * Set pattern-specific styles here. These styles
 * should only affect the way the patterns are displayed,
 * not determine the pattern's actual styling.
 */
@include grid(
  $gutter: 10,
  $name: 'sg-grid',
  $items: 'sg-grid-item'
);

.sg-colors {
  padding: 10px;
  
  &-color {
    border: $sg-pattern-border;
    border-radius: 5px;
    overflow: hidden;
    
    &-swatch { 
      height: 175px; 
    }
    
    &-label { 
      padding: 10px; 
      line-height: 1.5;
      border-top: $sg-pattern-border;
      
      &-name { 
        font-family: font('label'); 
      }
      &-sass,
      &-rgb,
      &-hex { 
        font-family: font('code');
        font-size: 0.8em;
      }
      
    }
    
  }
  
}

.sg-fonts {
  
  &-font {
    padding: 25px;
    background-color: color('white', 'off');
    border: $sg-pattern-border;
    @include margin-y(10px);
    
    &-sample { font-size: 1.25em; color: color('blue'); }
    &-family, &-sass { font-size: 0.8em; }
    &-family { font-family: font('label'); }
    &-sass { font-family: font('code'); }
    
  }
  
}

.sg-classes {
  
  @include grid(
    $columns: 2,
    $gutter: 0,
    $name: 'sg-classes-class',
    $items: 'sg-classes-class-data'
  );
  
  &-class {
    padding: 10px;
    border: $sg-pattern-border;
    @include margin-y(10px);
    font-size: 0.8em;
    
    &-name, &-hex { font-family: font('code'); }
    //&-name { text-transform: uppercase; }
    &-hex { text-align: right; }
    
  }
  
}

.sg-stack {
  border: $sg-pattern-border;
  padding: 25px;
  overflow: auto;
  
  &-item { overflow: inherit; border-bottom: $sg-pattern-border; padding-bottom: 10px; }
  
}

.sg-card {
  border: $sg-pattern-border;
  padding: 25px;
  overflow: auto;
}

.sg-icons {
  padding: 10px;
  
  &-icon {
    border: $sg-pattern-border;
    border-radius: 5px;
    padding: 10px;
    text-align: center;
    
    &-preview {
      font-size: 3em;
    }
    
    &-class,
    &-unicode {
      font-family: font('code');
      font-size: 0.8em;
    }
    
  }
  
}

.sg-inlines {
  
  &-inline {
    
    &-name { 
      text-transform: capitalize;
      font-family: font('heading');
      font-weight: bold;
      font-size: 1.2em;
    }
    
    &-name,
    &-use {
      @include margin-y(10px);
    }
    
    &-use {
      code { color: color('black', 'off') !important; }
    }
    
  }
  
}